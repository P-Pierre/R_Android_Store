library(tidyverse) #charge la librairie Tidyverse

#################################################################################################################
# Charger le fichier CSV et en faire un sous dataset
# Afficher des infos sur le dataset
#################################################################################################################
#charge le document csv de google play store
datastore <- read.csv("~/ISS 2018-2019/RStudio/googleplaystore.csv") 
#voir la forme du dataset
#head(datastore) 
#voir le résumé du dataset
#summary(datastore) 
#pour s'entrainer juste avec une petite partie du fichier
expl = sample_n(datastore, 1000) 


#################################################################################################################
# Tests
#################################################################################################################
expl[expl$Type=="Paid",] #que des payantes


#################################################################################################################
# Appliquer les traitements des donners aux dataset complet ==> aprés traitement des lignes 37, 38 et 39 plus que 8883 datas
#################################################################################################################
#datastore = datastore[complete.cases(datastore),] #creer un nouveau dataset sans les lignes avec données manquantes Na => ne pas appliquer !!
datastore = dplyr::filter(datastore, !grepl(';', Genres)) # Supprimer les lignes avec deux Genres en même temps
datastore = dplyr::filter(datastore, !grepl('1.9', Category)) # Supprimer la seul ligne avec 1.9 en catégory
datastore$Price = as.numeric(gsub("[\\$,]","",datastore$Price)) #  prix en chiffre
datastore$Installs = as.numeric(gsub("[\\+,\\,]","",datastore$Installs)) # Installs avec les nombres
#pour creer nouvelle colone ajouter 2 au nom de colone avant le =
datastore$Reviews = as.numeric(datastore$Reviews)
datastore = datastore %>% filter(Type %in% c("Free", "Paid")) # filtre le dataset, enlève la ligne avec NaN et 0 en Type
#datastore %>%filter(Size %in% "Varies with device") %>% count() # nombre d'entré  avec Varies with device dans $size
#datastore %>%filter(duplicated(datastore)) %>% count() # nombre de ligne dupliqué dans le dataset
datastore = datastore %>%filter(!duplicated(datastore)) # enlève les lignes dupliqué
# Traite la colone Size, passe en numérique, enlève k, ajoute 000 la ou il y a M et passe les données non numériques en Na. Size en Kb
datastore$Size = gsub("['k',\\+,\\,]","",datastore$Size)
datastore$Size = gsub("['M']","000",datastore$Size)
datastore$Size = gsub("['M']","000",datastore$Size)
datastore$Size = as.numeric(gsub("Varies with device",NA,datastore$Size))


#################################################################################################################
# Les plots 

# http://www.sthda.com/french/wiki/ggplot2-barplots-guide-de-demarrage-rapide-logiciel-r-et-visualisation-de-donnees 
# Utiliser + scale_fill_grey() pour avoir des nuances de gris
# Utiliser + coord_flip() pour changer le sens du plot
#################################################################################################################
# Plot du nombre d'apllication Gratuit ou payant en bleu
plot = ggplot(expl, aes(x=Type))+
  geom_bar(stat="count", width=0.2, fill="steelblue")+
  theme_minimal()

# Plot du nombre d'apllication Gratuit ou payant, couleur différentes pour gratuit et payant
plot2 = ggplot(expl, aes(x=Type, fill=Type))+
  geom_bar(stat="count", width=0.2)+
  theme_minimal()
plot2data = ggplot(datastore, aes(x=Type, fill=Type))+
  geom_bar(stat="count", width=0.2)+
  theme_minimal()

# Plot le nombre de chaque application par genre. Supperposition de couleur en fonction de payant ou gratuit
Plot3 = ggplot(expl, aes(x=Genres, fill=Type))+
  geom_bar(stat="count", width=0.2)+
  theme_minimal()+ 
  coord_flip()
Plot3data = ggplot(datastore, aes(x=Genres, fill=Type))+geom_bar(stat="count", width=0.2)+
  theme_minimal()+ 
  coord_flip()

# Plot le nombre de chaque application par Category. Supperposition de couleur en fonction de payant ou gratuit
Plot4 = ggplot(expl, aes(x=Category, fill=Type))+
  geom_bar(stat="count", width=0.2)+
  theme_minimal()+ 
  coord_flip()
Plot4data = ggplot(datastore, aes(x=Category, fill=Type))+geom_bar(stat="count", width=0.2)+
  theme_minimal()+ 
  coord_flip()

#Category vs Count
